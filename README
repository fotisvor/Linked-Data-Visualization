This project is a web-based application for visualizing historical boundary changes of U.S. counties and states, using linked data technologies. It enables users to explore and compare the evolution of geographic boundaries over time, utilizing RDF data, SPARQL queries, and GeoSPARQL integration for geospatial data. The application provides interactive maps and metadata to enhance the understanding of historical changes in U.S. boundaries.

Prerequisites
Before deploying the application locally, ensure that the following tools are installed on your system:

Node.js: Install Node.js (for Angular)
Angular CLI: Install via npm: npm install -g @angular/cli
Java JDK: Required to run the Spring Boot server. Download JDK
Apache Maven: Ensure Maven is installed for building the Spring Boot project.
GraphDB: You need to have a running GraphDB instance with the repository loaded.
Application Overview
Frontend (Angular): The Angular app runs on localhost:4200 and provides the user interface.
Backend (Spring Boot): The Spring Boot server, running on localhost:8080, handles the API requests, processes RDF queries, and interacts with the database.
GraphDB: The RDF repository, hosted on localhost:7200, stores and serves the linked data using SPARQL and GeoSPARQL queries.

Deployment Steps
1. Clone the Repository
First, clone this repository to your local machine:

git clone https://github.com/fotisvor/Linked-Data-Visualization.git
cd Linked-Data-Visualization

2. Set Up GraphDB
Ensure that your GraphDB server is running locally on port 7200. You will need to:

Install GraphDB: Download GraphDB and follow the installation instructions.
Create a Repository: Once GraphDB is running, create a repository and import the GeoChanges dataset required by the application.
Configure the Repository: Ensure that the GraphDB server is running on http://localhost:7200/repositories/{your-repo}.

3. Set Up and Run the Spring Boot Server
Navigate to the Spring Boot backend directory:

cd backend

Build the Spring Boot Project:

mvn clean install

Run the Spring Boot Server:

mvn spring-boot:run

The backend will now be running on http://localhost:8080.

4. Set Up and Run the Angular Frontend
Navigate to the Angular frontend directory:

cd frontend

Install Dependencies:

npm install

Run the Angular Development Server:
ng serve

The Angular app will now be running on http://localhost:4200.

5. Access the Application
Once the Angular app, Spring Boot server, and GraphDB repository are running:

Open your browser and go to http://localhost:4200 to use the application.
The app will communicate with the backend at http://localhost:8080 and with the GraphDB instance on http://localhost:7200.

Application Structure
Frontend (Angular): Handles the UI and user interactions.
Backend (Spring Boot): Processes requests, queries the RDF data, and returns results.
GraphDB: Stores the RDF data and supports SPARQL and GeoSPARQL queries.
